Для создания меню в Windows Forms используются классы MenuStrip, ToolStripMenuItem и ToolStripSeparator.

MenuStrip: Представляет контейнер для меню в приложении. Его свойства и методы включают Items (коллекция элементов меню), 
BackColor, ForeColor, Font, Dock, TopLevel и другие.
ToolStripMenuItem: Представляет элемент меню. Его свойства и методы включают Text, Checked, Enabled, DropDownItems 
(коллекция подменю), Image, ShortcutKeys и другие.
ToolStripSeparator: Представляет разделитель в меню.

Строка состояния (StatusStrip) может содержать различные элементы, такие как метки (ToolStripStatusLabel), 
прогресс-бары (ToolStripProgressBar) и другие элементы управления, 
предназначенные для отображения информации о состоянии приложения или другой полезной информации для пользователя.

Методы управления строкой состояния включают:

Add: Добавляет новый элемент в строку состояния.
Remove: Удаляет элемент из строки состояния.
Clear: Удаляет все элементы из строки состояния.
SuspendLayout и ResumeLayout: Приостанавливают и возобновляют логику компоновки элементов строки состояния.
Регулярные выражения (RegEx) - это шаблоны символов, которые используются для поиска и сопоставления текста 
в строках. Они могут быть использованы для поиска, валидации, замены и многого другого.

Привязки (или якоря) в RegEx - это символы, которые определяют позицию в строке, к которой применяется 
шаблон. Примеры привязок включают ^ (начало строки) и $ (конец строки).

Группирование в регулярных выражениях позволяет обрабатывать части шаблона как единое целое. Например, 
можно использовать группировку для применения квантора ко всей группе. Пример: (ab)+ будет сопоставлять последовательности "ab", "abab", "ababab" и т. д.

Кванторы (или множители) в регулярных выражениях указывают, сколько раз может повторяться предыдущий 
элемент. Примеры кванторов включают * (ноль или более), + (один или более), ? (ноль или один) и {n} (ровно n раз).

Примеры регулярных выражений:

Для проверки номера MTC (Velcom): ^\+375\(29|33|44|25\)\d{7}$
Для проверки паспорта: \d{2}\s\d{2}\s\d{6}
Для проверки даты: \d{2}\.\d{2}\.\d{4}
Для проверки УДК: \d{3}\.\d{4}\.\d{3}
Для проверки фамилии: [A-ZА-Я][a-zа-я]+
Для проверки пароля, логина: ^[a-zA-Z0-9_-]{3,16}$
Разбор примеров регулярных выражений:

?<=<img .*?src\s*=\s*"")[^"]+(?="".*?>)": Ищет URL изображения в HTML-теге <img>.

"[a-zA-Zа-яА-Я,-;:]{5,50}": Ищет строку из символов латиницы и кириллицы, длиной от 5 до 50 символов, 
заключенную в двойные кавычки.

/^[a-z0-9_-]{3,16}$/: Проверяет, что строка состоит из строчных букв латиницы, цифр, символов подчеркивания 
и дефиса, и имеет длину от 3 до 16 символов.

/^#?([a-f0-9]{6}|[a-f0-9]{3})$/: Проверяет корректность формата шестнадцатеричного цвета в HTML (например, "#ffffff").

/^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/: Проверяет корректность URL-адреса веб-сайта.

/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/: Проверяет корректность 
формата IPv4-адреса.

/^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$/: Проверяет правильность синтаксиса HTML-тега.

пасспорт
\d{4}\s\d{6}

дата
\d{2}\.\d{2}\.\d{4}

удк
\d{3}\.\d{4}\.\d{3}

фамилия
\d{2}\.\d{2}\.\d{4}

пароль логин
^[a-zA-Z0-9_-]{3,16}$
